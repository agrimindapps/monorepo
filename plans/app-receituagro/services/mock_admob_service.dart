// Flutter imports:
import 'package:flutter/foundation.dart';

// Package imports:
import 'package:get/get.dart';

/// Mock service para substituir o AdmobService no m√≥dulo receituagro
/// Remove completamente a depend√™ncia de an√∫ncios mantendo a interface
class MockAdmobService extends GetxService {
  static MockAdmobService get to => Get.find();

  // Propriedades reativas que simulam o comportamento sem funcionalidade real
  final RxBool isPremiumAd = false.obs;
  final RxInt premiumAdHours = 0.obs;
  final RxBool rewardedAdIsLoaded = false.obs;

  // Propriedade que sempre retorna null (sem an√∫ncios)
  dynamic get rewardedAd => null;

  /// Inicializa o servi√ßo mock (n√£o faz nada)
  @override
  void onInit() {
    super.onInit();
    if (kDebugMode) {
      debugPrint('üö´ [MOCK_ADMOB] Servi√ßo de an√∫ncios desabilitado para este app');
    }
  }

  /// M√©todo de inicializa√ß√£o vazio
  void init() {
    // N√£o faz nada - an√∫ncios desabilitados
  }

  /// Sempre retorna false (usu√°rio n√£o tem premium por an√∫ncios)
  Future<bool> checkIsPremiumAd() async {
    return false;
  }

  /// N√£o define premium por an√∫ncios (m√©todo vazio)
  void setPremiumAd(int hours) {
    // N√£o faz nada - an√∫ncios desabilitados
  }

  /// N√£o carrega an√∫ncios (m√©todo vazio)
  Future<void> getPremiumAd() async {
    // N√£o faz nada - an√∫ncios desabilitados
  }

  /// Retorna informa√ß√µes de debug indicando que an√∫ncios est√£o desabilitados
  Map<String, dynamic> getAdStatus() {
    return {
      'enabled': false,
      'reason': 'AdMob disabled for this app module',
      'isPremiumAd': false,
      'premiumAdHours': 0,
      'rewardedAdIsLoaded': false,
    };
  }
}
