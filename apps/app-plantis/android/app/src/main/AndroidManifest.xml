<manifest xmlns:android="http://schemas.android.com/apk/res/android">
    
    <!-- OPTIMIZED PERMISSIONS - Only essential permissions included -->
    <!-- Internet access for Firebase and API calls -->
    <uses-permission android:name="android.permission.INTERNET" />
    
    <!-- Network state to check connectivity -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    
    <!-- Camera for plant photos (user-initiated only) -->
    <uses-permission android:name="android.permission.CAMERA" />
    
    <!-- Photo library access for plant images -->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" 
        android:maxSdkVersion="32" />
    <uses-permission android:name="android.permission.READ_MEDIA_IMAGES" />
    
    <!-- Notifications for plant care reminders -->
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
    
    <!-- Wake lock for background notifications (minimal usage) -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    
    <!-- Vibration for notifications -->
    <uses-permission android:name="android.permission.VIBRATE" />
    
    <!-- REMOVED PERMISSIONS (OWASP compliance):
         - WRITE_EXTERNAL_STORAGE (not needed with scoped storage)
         - ACCESS_FINE_LOCATION (plants app doesn't need precise location)
         - READ_PHONE_STATE (not required for this app)
         - RECORD_AUDIO (not used)
         - GET_ACCOUNTS (Firebase handles auth)
    -->
    
    <application
        android:label="Plantis"
        android:name="${applicationName}"
        android:icon="@mipmap/ic_launcher"
        android:allowBackup="false"
        android:networkSecurityConfig="@xml/network_security_config"
        android:usesCleartextTraffic="false"
        android:extractNativeLibs="false">
        
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:launchMode="singleTop"
            android:taskAffinity=""
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize"
            android:screenOrientation="portrait">
            
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
              android:name="io.flutter.embedding.android.NormalTheme"
              android:resource="@style/NormalTheme"
              />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        
        <!-- Firebase Crashlytics NDK crash reporting -->
        <service 
            android:name="com.google.firebase.crashlytics.ndk.CrashlyticsNdkService"
            android:exported="false" />
        
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
            
        <!-- Security: Disable debugging in production -->
        <meta-data 
            android:name="android.debuggable" 
            android:value="false" />
            
    </application>
    <!-- Required to query activities that can process text, see:
         https://developer.android.com/training/package-visibility and
         https://developer.android.com/reference/android/content/Intent#ACTION_PROCESS_TEXT.

         In particular, this is used by the Flutter engine in io.flutter.plugin.text.ProcessTextPlugin. -->
    <queries>
        <intent>
            <action android:name="android.intent.action.PROCESS_TEXT"/>
            <data android:mimeType="text/plain"/>
        </intent>
    </queries>
</manifest>
