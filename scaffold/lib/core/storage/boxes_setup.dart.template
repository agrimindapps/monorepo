import 'package:hive_flutter/hive_flutter.dart';
import '../../features/example/data/models/example_model.dart';
import '../config/app_config.dart.template';

/// Hive boxes setup and initialization
/// Registers all TypeAdapters and opens boxes
class BoxesSetup {
  BoxesSetup._();

  /// Initialize Hive and register all type adapters
  static Future<void> init() async {
    await Hive.initFlutter();

    // Register type adapters
    _registerAdapters();

    // Open boxes
    await _openBoxes();
  }

  /// Register all Hive type adapters
  static void _registerAdapters() {
    // Register your model adapters here
    // The typeId should be unique for each model
    if (!Hive.isAdapterRegistered(0)) {
      Hive.registerAdapter(ExampleModelAdapter());
    }

    // TODO: Register more adapters
    // if (!Hive.isAdapterRegistered(1)) {
    //   Hive.registerAdapter(YourModelAdapter());
    // }
  }

  /// Open all required Hive boxes
  static Future<void> _openBoxes() async {
    // Open example box
    await Hive.openBox<ExampleModel>(AppConfig.exampleBoxName);

    // TODO: Open more boxes
    // await Hive.openBox<YourModel>('your_box_name');
  }

  /// Get a specific box by name
  static Box<T> getBox<T>(String boxName) {
    return Hive.box<T>(boxName);
  }

  /// Close all boxes (for cleanup)
  static Future<void> closeAll() async {
    await Hive.close();
  }

  /// Clear all boxes (for logout/reset)
  static Future<void> clearAll() async {
    await Hive.box<ExampleModel>(AppConfig.exampleBoxName).clear();
    // TODO: Clear more boxes
    // await Hive.box<YourModel>('your_box_name').clear();
  }

  /// Delete all boxes (complete wipe)
  static Future<void> deleteAll() async {
    await Hive.deleteBoxFromDisk(AppConfig.exampleBoxName);
    // TODO: Delete more boxes
    // await Hive.deleteBoxFromDisk('your_box_name');
  }
}
