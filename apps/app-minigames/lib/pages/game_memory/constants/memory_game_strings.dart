/// Strings centralizadas para o jogo da mem√≥ria
/// 
/// Centraliza todas as strings do jogo para facilitar
/// internacionaliza√ß√£o e manuten√ß√£o.
library;

/// Strings da interface do usu√°rio
class MemoryGameStrings {
  /// T√≠tulo do jogo
  static const String gameTitle = 'Jogo da Mem√≥ria';
  
  /// Bot√µes
  static const String startGame = 'Iniciar Jogo';
  static const String pauseGame = 'Pausar';
  static const String resumeGame = 'Retomar';
  static const String restartGame = 'Reiniciar';
  static const String newGame = 'Novo Jogo';
  static const String exitGame = 'Sair';
  static const String playAgain = 'Jogar Novamente';
  static const String continueButton = 'Continuar';
  static const String cancel = 'Cancelar';
  static const String ok = 'OK';
  static const String close = 'Fechar';
  static const String save = 'Salvar';
  static const String load = 'Carregar';
  static const String delete = 'Excluir';
  static const String confirm = 'Confirmar';
  static const String apply = 'Aplicar';
  static const String reset = 'Resetar';
  
  /// Informa√ß√µes do jogo
  static const String time = 'Tempo';
  static const String moves = 'Movimentos';
  static const String pairs = 'Pares';
  static const String score = 'Pontua√ß√£o';
  static const String bestScore = 'Melhor Pontua√ß√£o';
  static const String level = 'N√≠vel';
  static const String difficulty = 'Dificuldade';
  static const String mode = 'Modo';
  
  /// Estados do jogo
  static const String gameStarted = 'Jogo iniciado!';
  static const String gamePaused = 'Jogo pausado';
  static const String gameResumed = 'Jogo retomado';
  static const String gameCompleted = 'Jogo conclu√≠do!';
  static const String gameOver = 'Fim de jogo';
  static const String congratulations = 'Parab√©ns!';
  static const String newRecord = 'Novo recorde!';
  static const String matchFound = 'Par encontrado!';
  static const String noMatch = 'N√£o √© um par';
  
  /// Dificuldades
  static const String easy = 'F√°cil';
  static const String medium = 'M√©dio';
  static const String hard = 'Dif√≠cil';
  
  /// Modos de jogo
  static const String classicMode = 'Cl√°ssico';
  static const String timeAttackMode = 'Contra o Tempo';
  static const String challengeMode = 'Desafio';
  static const String zenMode = 'Zen';
  
  /// Descri√ß√µes dos modos
  static const String classicModeDescription = 'Modo tradicional sem limites de tempo ou movimentos';
  static const String timeAttackModeDescription = 'Complete o jogo antes que o tempo acabe!';
  static const String challengeModeDescription = 'Complete com o m√≠nimo de movimentos poss√≠vel!';
  static const String zenModeDescription = 'Jogue sem pressa, focando na tranquilidade';
  
  /// Configura√ß√µes
  static const String settings = 'Configura√ß√µes';
  static const String audio = '√Åudio';
  static const String sound = 'Som';
  static const String music = 'M√∫sica';
  static const String effects = 'Efeitos';
  static const String hapticFeedback = 'Feedback T√°til';
  static const String animations = 'Anima√ß√µes';
  static const String theme = 'Tema';
  static const String language = 'Idioma';
  static const String accessibility = 'Acessibilidade';
  static const String performance = 'Performance';
  
  /// Temas
  static const String lightTheme = 'Claro';
  static const String darkTheme = 'Escuro';
  static const String autoTheme = 'Autom√°tico';
  static const String highContrast = 'Alto Contraste';
  
  /// Acessibilidade
  static const String screenReader = 'Leitor de Tela';
  static const String largeText = 'Texto Grande';
  static const String reduceMotion = 'Reduzir Movimento';
  static const String colorBlindSupport = 'Suporte a Daltonismo';
  static const String voiceCommands = 'Comandos de Voz';
  static const String visualIndicators = 'Indicadores Visuais';
  
  /// Estat√≠sticas
  static const String statistics = 'Estat√≠sticas';
  static const String totalGames = 'Total de Jogos';
  static const String totalWins = 'Total de Vit√≥rias';
  static const String totalMoves = 'Total de Movimentos';
  static const String totalTime = 'Tempo Total';
  static const String averageTime = 'Tempo M√©dio';
  static const String bestTime = 'Melhor Tempo';
  static const String perfectGames = 'Jogos Perfeitos';
  static const String winRate = 'Taxa de Vit√≥ria';
  static const String efficiency = 'Efici√™ncia';
  
  /// Di√°logos
  static const String pauseDialogTitle = 'Jogo Pausado';
  static const String gameOverDialogTitle = 'Jogo Conclu√≠do';
  static const String newRecordDialogTitle = 'Novo Recorde!';
  static const String confirmExitTitle = 'Confirmar Sa√≠da';
  static const String confirmRestartTitle = 'Confirmar Rein√≠cio';
  static const String settingsDialogTitle = 'Configura√ß√µes';
  static const String statisticsDialogTitle = 'Suas Estat√≠sticas';
  static const String helpDialogTitle = 'Como Jogar';
  
  /// Mensagens de confirma√ß√£o
  static const String confirmExitMessage = 'Tem certeza que deseja sair do jogo?';
  static const String confirmRestartMessage = 'Tem certeza que deseja reiniciar o jogo atual?';
  static const String confirmResetStatsMessage = 'Tem certeza que deseja resetar todas as estat√≠sticas?';
  static const String confirmDeleteSaveMessage = 'Tem certeza que deseja excluir este save?';
  
  /// Mensagens de resultado
  static const String gameCompletedMessage = 'Voc√™ completou o jogo!';
  static const String newRecordMessage = 'Voc√™ estabeleceu um novo recorde!';
  static const String gameCompletedIn = 'Conclu√≠do em';
  static const String withMoves = 'com movimentos';
  static const String inTime = 'em';
  
  /// Instru√ß√µes
  static const String howToPlayTitle = 'Como Jogar';
  static const String howToPlayContent = '''
üéØ Objetivo: Encontre todos os pares de cartas iguais.

üì± Como jogar:
‚Ä¢ Toque em uma carta para vir√°-la
‚Ä¢ Toque em outra carta para formar um par
‚Ä¢ Se as cartas forem iguais, elas permanecer√£o viradas
‚Ä¢ Se forem diferentes, voltar√£o a ficar viradas para baixo

üèÜ Pontua√ß√£o: Baseada no tempo, movimentos e dificuldade.

üí° Dicas:
‚Ä¢ Memorize a posi√ß√£o das cartas
‚Ä¢ Comece pelas bordas
‚Ä¢ Mantenha a concentra√ß√£o
''';
  
  /// Erros e avisos
  static const String error = 'Erro';
  static const String warning = 'Aviso';
  static const String information = 'Informa√ß√£o';
  static const String success = 'Sucesso';
  
  /// Mensagens de erro
  static const String errorLoadingGame = 'Erro ao carregar o jogo';
  static const String errorSavingGame = 'Erro ao salvar o jogo';
  static const String errorLoadingStats = 'Erro ao carregar estat√≠sticas';
  static const String errorInvalidMove = 'Movimento inv√°lido';
  static const String errorGameNotStarted = 'O jogo ainda n√£o foi iniciado';
  static const String errorGameAlreadyFinished = 'O jogo j√° foi finalizado';
  
  /// Mensagens de sucesso
  static const String gameSaved = 'Jogo salvo com sucesso';
  static const String gameLoaded = 'Jogo carregado com sucesso';
  static const String settingsSaved = 'Configura√ß√µes salvas';
  static const String statsReset = 'Estat√≠sticas resetadas';
  
  /// Tooltips e dicas
  static const String pauseTooltip = 'Pausar jogo';
  static const String resumeTooltip = 'Retomar jogo';
  static const String restartTooltip = 'Reiniciar jogo';
  static const String settingsTooltip = 'Configura√ß√µes';
  static const String helpTooltip = 'Ajuda';
  static const String muteTooltip = 'Silenciar';
  static const String unmuteTooltip = 'Ativar som';
  
  /// Navega√ß√£o
  static const String back = 'Voltar';
  static const String next = 'Pr√≥ximo';
  static const String previous = 'Anterior';
  static const String menu = 'Menu';
  static const String home = 'In√≠cio';
  
  /// Unidades de tempo
  static const String seconds = 'segundos';
  static const String minutes = 'minutos';
  static const String hours = 'horas';
  static const String sec = 's';
  static const String min = 'm';
  static const String hr = 'h';
  
  /// N√∫meros por extenso (para acessibilidade)
  static const List<String> numbers = [
    'zero', 'um', 'dois', 'tr√™s', 'quatro', 'cinco',
    'seis', 'sete', 'oito', 'nove', 'dez',
    'onze', 'doze', 'treze', 'quatorze', 'quinze',
    'dezesseis', 'dezessete', 'dezoito', 'dezenove', 'vinte'
  ];
  
  /// Cores (para acessibilidade)
  static const Map<String, String> colorNames = {
    'red': 'vermelho',
    'green': 'verde',
    'blue': 'azul',
    'yellow': 'amarelo',
    'purple': 'roxo',
    'orange': 'laranja',
    'pink': 'rosa',
    'brown': 'marrom',
    'gray': 'cinza',
    'black': 'preto',
    'white': 'branco',
  };
  
  /// Formas (para acessibilidade)
  static const Map<String, String> shapeNames = {
    'circle': 'c√≠rculo',
    'square': 'quadrado',
    'triangle': 'tri√¢ngulo',
    'star': 'estrela',
    'heart': 'cora√ß√£o',
    'diamond': 'losango',
    'oval': 'oval',
    'rectangle': 'ret√¢ngulo',
  };
  
  /// Formata√ß√£o de tempo
  static String formatTime(int seconds) {
    final hours = seconds ~/ 3600;
    final minutes = (seconds % 3600) ~/ 60;
    final secs = seconds % 60;
    
    if (hours > 0) {
      return '${hours}h ${minutes}m ${secs}s';
    } else if (minutes > 0) {
      return '${minutes}m ${secs}s';
    } else {
      return '${secs}s';
    }
  }
  
  /// Formata√ß√£o de pontua√ß√£o
  static String formatScore(int score) {
    if (score >= 1000000) {
      return '${(score / 1000000).toStringAsFixed(1)}M';
    } else if (score >= 1000) {
      return '${(score / 1000).toStringAsFixed(1)}K';
    } else {
      return score.toString();
    }
  }
  
  /// Mensagem de progresso
  static String progressMessage(int current, int total) {
    return '$current de $total';
  }
  
  /// Mensagem de porcentagem
  static String percentageMessage(double percentage) {
    return '${percentage.toStringAsFixed(1)}%';
  }
  
  /// Plural/singular din√¢mico
  static String pluralize(int count, String singular, String plural) {
    return count == 1 ? singular : plural;
  }
  
  /// Mensagem de movimento
  static String movesMessage(int moves) {
    return '$moves ${pluralize(moves, "movimento", "movimentos")}';
  }
  
  /// Mensagem de par
  static String pairsMessage(int pairs, int total) {
    return '$pairs de $total ${pluralize(total, "par", "pares")}';
  }
  
  /// Mensagem de vit√≥ria personalizada
  static String victoryMessage(int moves, String time) {
    return 'Parab√©ns! Voc√™ completou o jogo em $moves ${pluralize(moves, "movimento", "movimentos")} e $time.';
  }
  
  /// Mensagem de novo recorde personalizada
  static String newRecordMessageDetailed(int score, int previousBest) {
    return 'Novo recorde! Voc√™ fez $score pontos, superando o recorde anterior de $previousBest pontos.';
  }
}

/// Strings espec√≠ficas para acessibilidade
class AccessibilityStrings {
  static const String cardRevealed = 'Carta revelada';
  static const String cardHidden = 'Carta oculta';
  static const String cardMatched = 'Par encontrado';
  static const String tapToReveal = 'Toque para revelar';
  static const String position = 'Posi√ß√£o';
  static const String of = 'de';
  static const String showing = 'mostrando';
  static const String gameBoard = 'Tabuleiro do jogo';
  static const String gameInfo = 'Informa√ß√µes do jogo';
  static const String gameControls = 'Controles do jogo';
  
  /// Gera descri√ß√£o acess√≠vel para carta
  static String cardDescription({
    required int position,
    required int total,
    required String state,
    String? content,
  }) {
    final baseDescription = 'Carta $position de $total, $state';
    if (content != null) {
      return '$baseDescription, $showing $content';
    }
    return baseDescription;
  }
  
  /// Gera an√∫ncio para a√ß√£o
  static String actionAnnouncement(String action) {
    switch (action) {
      case 'match_found':
        return 'Par encontrado!';
      case 'no_match':
        return 'As cartas n√£o fazem par';
      case 'game_completed':
        return 'Jogo conclu√≠do! Parab√©ns!';
      case 'game_paused':
        return 'Jogo pausado';
      case 'game_resumed':
        return 'Jogo retomado';
      default:
        return action;
    }
  }
}