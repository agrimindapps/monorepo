import 'package:core/core.dart';
import 'package:flutter/foundation.dart';

/// Inicializador do DatabaseInspectorService espec√≠fico para o app-plantis
class AppDataInspectorInitializer {
  static void initialize() {
    if (!kDebugMode) return; // Apenas em modo debug

    final inspector = DatabaseInspectorService.instance;

    // Registrar todas as boxes customizadas do app-plantis
    inspector.registerCustomBoxes([
      // M√≥dulo de Plantas
      CustomBoxType(
        key: 'plants',
        displayName: 'Plantas',
        module: 'plants',
        description:
            'Dados completos das plantas cadastradas, incluindo informa√ß√µes b√°sicas, cuidados e imagens',
      ),

      // M√≥dulo de Espa√ßos/Ambientes
      CustomBoxType(
        key: 'spaces',
        displayName: 'Espa√ßos',
        module: 'spaces',
        description:
            'Ambientes onde as plantas est√£o localizadas (sala, cozinha, varanda, etc)',
      ),

      // M√≥dulo de Tarefas
      CustomBoxType(
        key: 'tasks',
        displayName: 'Tarefas de Cuidados',
        module: 'tasks',
        description:
            'Lembretes e tarefas de cuidados das plantas (regar, adubar, podar)',
      ),

      // M√≥dulo de Notifica√ß√µes
      CustomBoxType(
        key: 'notifications_settings',
        displayName: 'Configura√ß√µes de Notifica√ß√µes',
        module: 'notifications',
        description: 'Prefer√™ncias de notifica√ß√µes e lembretes do usu√°rio',
      ),

      CustomBoxType(
        key: 'notifications_history',
        displayName: 'Hist√≥rico de Notifica√ß√µes',
        module: 'notifications',
        description: 'Registro de notifica√ß√µes enviadas ao usu√°rio',
      ),

      // M√≥dulo de Configura√ß√µes
      CustomBoxType(
        key: 'user_preferences',
        displayName: 'Prefer√™ncias do Usu√°rio',
        module: 'settings',
        description:
            'Configura√ß√µes gerais do aplicativo e prefer√™ncias do usu√°rio',
      ),

      CustomBoxType(
        key: 'app_settings',
        displayName: 'Configura√ß√µes do App',
        module: 'settings',
        description: 'Configura√ß√µes t√©cnicas e de sistema do aplicativo',
      ),

      // M√≥dulo Premium/Licen√ßas
      CustomBoxType(
        key: 'premium_license',
        displayName: 'Licen√ßa Premium',
        module: 'premium',
        description: 'Informa√ß√µes de licen√ßa e assinatura premium',
      ),

      // M√≥dulo de Cache
      CustomBoxType(
        key: 'image_cache',
        displayName: 'Cache de Imagens',
        module: 'cache',
        description: 'Cache de imagens das plantas para melhor performance',
      ),

      // M√≥dulo de Sincroniza√ß√£o
      CustomBoxType(
        key: 'sync_queue',
        displayName: 'Fila de Sincroniza√ß√£o',
        module: 'sync',
        description: 'Dados pendentes de sincroniza√ß√£o com o servidor',
      ),

      CustomBoxType(
        key: 'sync_metadata',
        displayName: 'Metadados de Sincroniza√ß√£o',
        module: 'sync',
        description: 'Informa√ß√µes sobre √∫ltima sincroniza√ß√£o e status',
      ),

      // M√≥dulo de Analytics
      CustomBoxType(
        key: 'analytics_events',
        displayName: 'Eventos de Analytics',
        module: 'analytics',
        description: 'Eventos de uso do app para an√°lise',
      ),

      // M√≥dulo de Backup
      CustomBoxType(
        key: 'backup_metadata',
        displayName: 'Metadados de Backup',
        module: 'backup',
        description: 'Informa√ß√µes sobre backups locais e na nuvem',
      ),
    ]);

    if (kDebugMode) {
      print('üîç DatabaseInspectorService inicializado para app-plantis');
      print('üì¶ ${inspector.customBoxes.length} boxes registradas');
    }
  }

  /// Adiciona uma box customizada em runtime
  static void addCustomBox({
    required String key,
    required String displayName,
    required String module,
    String? description,
  }) {
    final inspector = DatabaseInspectorService.instance;
    inspector.addCustomBox(
      CustomBoxType(
        key: key,
        displayName: displayName,
        module: module,
        description: description,
      ),
    );
  }

  /// Remove uma box customizada
  static void removeCustomBox(String key) {
    final inspector = DatabaseInspectorService.instance;
    inspector.removeCustomBox(key);
  }
}
