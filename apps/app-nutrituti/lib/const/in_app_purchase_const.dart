// CONFIGURA√á√ÉO DE ASSINATURAS - app-nutrituti
// Implementa√ß√£o direta (substituindo SubscriptionFactoryService)

const String _appId = 'nutrituti';

// Produtos dispon√≠veis
const List<Map<String, dynamic>> inappProductIds = [
  {
    'id': 'br.com.agrimind.nutrituti.monthly',
    'title': 'Nutrituti Premium - Mensal',
    'price': 'R\$ 9,90',
    'type': 'subscription',
  },
  {
    'id': 'br.com.agrimind.nutrituti.yearly',
    'title': 'Nutrituti Premium - Anual',
    'price': 'R\$ 99,90',
    'type': 'subscription',
  },
];

// Regex para identificar produtos de assinatura
const String regexAssinatura = r'^br\.com\.agrimind\.nutrituti\.(monthly|yearly)$';

// Vantagens do Premium
const List<Map<String, dynamic>> inappVantagens = [
  {'icon': 'üßÆ', 'text': 'Calculadoras ilimitadas sem an√∫ncios'},
  {'icon': 'üíß', 'text': 'Controle de hidrata√ß√£o avan√ßado'},
  {'icon': 'üèãÔ∏è', 'text': 'Planos de exerc√≠cios personalizados'},
  {'icon': 'üßò', 'text': 'Medita√ß√µes exclusivas'},
  {'icon': 'üìä', 'text': 'Relat√≥rios nutricionais detalhados'},
  {'icon': 'üîî', 'text': 'Lembretes inteligentes'},
];

// Termos de uso e privacidade
const Map<String, String> inappTermosUso = {
  'terms': 'https://agrimindapps.blogspot.com/2022/08/nutrituti-termos-e-condicoes.html',
  'privacy': 'https://agrimindapps.blogspot.com/2022/08/nutrituti-politica-de-privacidade.html',
};

// Informa√ß√µes da assinatura
const Map<String, dynamic> infoAssinatura = {
  'name': 'Nutrituti Premium',
  'description': 'Acesso completo a todas as funcionalidades premium do app',
  'trial_days': 7,
  'benefits': [
    'Sem an√∫ncios',
    'Todas as calculadoras desbloqueadas',
    'Estat√≠sticas avan√ßadas',
    'Suporte priorit√°rio',
  ],
};

// RevenueCat Keys
// IMPORTANT: Em produ√ß√£o, estas keys devem vir de vari√°veis de ambiente
const String entitlementID = 'premium';

// Placeholder keys - SUBSTITUIR por valores reais em produ√ß√£o
const String appleApiKey = 'appl_nutrituti_placeholder';
const String googleApiKey = 'goog_nutrituti_placeholder';

// Valida√ß√µes
bool get isConfigurationValid =>
    inappProductIds.isNotEmpty &&
    entitlementID.isNotEmpty &&
    regexAssinatura.isNotEmpty;

List<String> get configurationErrors {
  final errors = <String>[];

  if (inappProductIds.isEmpty) {
    errors.add('Produtos de assinatura n√£o configurados');
  }

  if (entitlementID.isEmpty) {
    errors.add('Entitlement ID n√£o configurado');
  }

  if (regexAssinatura.isEmpty) {
    errors.add('Regex de valida√ß√£o n√£o configurado');
  }

  if (!hasValidApiKeys) {
    errors.add('API Keys do RevenueCat n√£o configuradas corretamente');
  }

  return errors;
}

bool get hasValidApiKeys =>
    appleApiKey.isNotEmpty &&
    googleApiKey.isNotEmpty &&
    !appleApiKey.contains('placeholder') &&
    !googleApiKey.contains('placeholder');

// M√©todo para obter configura√ß√£o completa como Map (√∫til para debugging)
Map<String, dynamic> get fullConfiguration => {
  'app_id': _appId,
  'products': inappProductIds,
  'regex': regexAssinatura,
  'advantages': inappVantagens,
  'terms': inappTermosUso,
  'info': infoAssinatura,
  'entitlement': entitlementID,
  'has_valid_keys': hasValidApiKeys,
};
