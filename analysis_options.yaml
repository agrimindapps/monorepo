# =============================================================================
# AGRIMIND SOLUÇÕES - ENTERPRISE ANALYSIS OPTIONS
# =============================================================================
# Configuração de análise estática empresarial para monorepo Flutter
# Versão: 2025.08.22v2 - Balanceada para produtividade + qualidade
# Aplicação: Todos os apps e packages do monorepo
#
# Filosofia: Rigoroso em segurança e arquitetura, flexível em estilo
# =============================================================================

include: package:flutter_lints/flutter.yaml

analyzer:
  # Configurações gerais do analisador
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true
  
  # Excluir arquivos gerados automaticamente
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.chopper.dart"
    - "**/*.gr.dart"
    - "**/generated_plugin_registrant.dart"
    - "**/l10n.dart"
    - "**/*_generated.dart"
    - "build/**"
    - ".dart_tool/**"
    - "ios/**"
    - "android/**"
    - "web/**"
    - "windows/**"
    - "macos/**"
    - "linux/**"

  # Configurações de erro (CRÍTICOS apenas)
  errors:
    # Security & Performance - SEMPRE ERRORS
    avoid_web_libraries_in_flutter: error
    cancel_subscriptions: error
    close_sinks: error
    
    # Architecture - SEMPRE ERRORS
    avoid_relative_lib_imports: error
    
    # Outros warnings podem ser tratados gradualmente
    todo: info
    deprecated_member_use: warning

linter:
  rules:
    # ==========================================================================
    # CRÍTICO - SECURITY & PERFORMANCE
    # ==========================================================================
    
    # Security obrigatório
    avoid_web_libraries_in_flutter: true
    
    # Performance crítica
    avoid_unnecessary_containers: true
    sized_box_for_whitespace: true
    use_build_context_synchronously: true
    
    # Memory management
    cancel_subscriptions: true
    close_sinks: true
    
    # Error handling crítico
    only_throw_errors: true

    # ==========================================================================
    # ARQUITETURA - CLEAN ARCHITECTURE ENFORCEMENT
    # ==========================================================================
    
    # Imports e estrutura
    avoid_relative_lib_imports: true
    file_names: true
    library_names: true
    library_prefixes: true
    
    # Classes e estruturas
    prefer_mixin: true
    avoid_classes_with_only_static_members: true

    # ==========================================================================
    # CODE QUALITY - BALANCEADO
    # ==========================================================================
    
    # Null safety
    prefer_null_aware_operators: true
    unnecessary_null_checks: true
    unnecessary_null_in_if_null_operators: true
    
    # Collections
    prefer_collection_literals: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_iterable_whereType: true
    prefer_spread_collections: true
    
    # Constructors
    prefer_const_constructors: true
    prefer_const_constructors_in_immutables: true
    prefer_const_declarations: true
    prefer_const_literals_to_create_immutables: true
    
    # Control flow
    prefer_conditional_assignment: true
    prefer_if_null_operators: true
    
    # Functions
    prefer_function_declarations_over_variables: true

    # ==========================================================================
    # FLUTTER ESPECÍFICO
    # ==========================================================================
    
    # Widget optimization
    use_colored_box: true
    use_decorated_box: true
    use_full_hex_values_for_flutter_colors: true
    use_key_in_widget_constructors: true

    # ==========================================================================
    # CONSISTENCY - MONOREPO
    # ==========================================================================
    
    # Code organization
    sort_child_properties_last: true
    # sort_constructors_first: true # Desabilitado - pode ser invasivo
    
    # String consistency
    prefer_single_quotes: true
    prefer_interpolation_to_compose_strings: true
    unnecessary_string_interpolations: true
    unnecessary_string_escapes: true
    
    # Async patterns
    unawaited_futures: true
    
    # Import organization
    directives_ordering: true

    # ==========================================================================
    # FINAL FIELDS - BALANCEADO
    # ==========================================================================
    
    # Preferir final quando apropriado, mas não forçar
    prefer_final_fields: true
    prefer_final_locals: false # Muito invasivo para desenvolvimento
    
    # ==========================================================================
    # REGRAS DESABILITADAS (PARA PRODUTIVIDADE)
    # ==========================================================================
    
    # Documentation - apenas para packages
    public_member_api_docs: false # Habilitado apenas no core package
    
    # Code style - muito invasivo
    sort_constructors_first: false
    sort_unnamed_constructors_first: false
    
    # Naming - muito restritivo durante desenvolvimento
    # (mantemos apenas os críticos: file_names, library_names)
    
    # Print debugging - permitido durante desenvolvimento
    avoid_print: false # Cada app decide conforme ambiente

    # ==========================================================================
    # OVERRIDES ESPECÍFICOS POR CONTEXTO
    # ==========================================================================
    
    # Regras que cada app pode sobrescrever conforme necessidade:
    # - avoid_print (dev vs prod)
    # - public_member_api_docs (packages vs apps)
    # - prefer_final_locals (baseado no time/projeto)

# =============================================================================
# INTEGRATION NOTES
# =============================================================================
# 
# Para Apps:
# - Herdam essas regras através de include: ../../analysis_options.yaml
# - Podem sobrescrever regras específicas conforme necessidade
# - Foco em avoid_print: false durante desenvolvimento
#
# Para Packages:
# - Regras mais rigorosas com public_member_api_docs: true
# - avoid_print: true sempre
# - Documentação obrigatória para APIs públicas
#
# Para CI/CD:
# - flutter analyze --fatal-warnings (tratará warnings como errors)
# - Gradualmente aumentar rigor conforme codebase melhora
#
# IDE Setup:
# - VS Code: Instalar Dart/Flutter extensions
# - Android Studio: Habilitar Dart Analysis
# - Format on save recomendado
# =============================================================================