// Flutter imports:
import 'package:flutter/services.dart';

// Package imports:
import 'package:share_plus/share_plus.dart';

// Project imports:
import 'package:app_calculei/pages/calc/financeiro/independencia_financeira/services/models/independencia_financeira_model.dart';
import 'package:app_calculei/services/formatting_service.dart';

class SharingService {
  static final SharingService _instance = SharingService._internal();
  factory SharingService() => _instance;
  SharingService._internal();

  final _formattingService = FormattingService();

  /// Compartilha resultado como texto
  Future<void> compartilharTexto(IndependenciaFinanceiraModel modelo) async {
    try {
      final texto = _gerarTextoCompartilhamento(modelo);
      await Share.share(texto);
    } catch (e) {
      throw Exception('Erro ao compartilhar: $e');
    }
  }

  /// Compartilha resultado com op√ß√µes personalizadas
  Future<void> compartilharComOpcoes(
    IndependenciaFinanceiraModel modelo, {
    bool incluirDetalhes = true,
    bool incluirDicas = true,
    String? mensagemPersonalizada,
  }) async {
    try {
      final texto = gerarTextoPersonalizado(
        modelo,
        incluirDetalhes: incluirDetalhes,
        incluirDicas: incluirDicas,
        mensagemPersonalizada: mensagemPersonalizada,
      );
      
      await Share.share(texto);
    } catch (e) {
      throw Exception('Erro ao compartilhar: $e');
    }
  }

  /// Copia resultado para clipboard
  Future<void> copiarParaClipboard(IndependenciaFinanceiraModel modelo) async {
    try {
      final texto = _gerarTextoCompartilhamento(modelo);
      await Clipboard.setData(ClipboardData(text: texto));
    } catch (e) {
      throw Exception('Erro ao copiar: $e');
    }
  }

  /// Gera preview do texto de compartilhamento
  String gerarPreview(IndependenciaFinanceiraModel modelo) {
    return _gerarTextoCompartilhamento(modelo);
  }

  /// Gera texto b√°sico para compartilhamento
  String _gerarTextoCompartilhamento(IndependenciaFinanceiraModel modelo) {
    final buffer = StringBuffer();
    
    buffer.writeln('üéØ INDEPEND√äNCIA FINANCEIRA');
    buffer.writeln('');
    buffer.writeln('üìä RESULTADOS DA SIMULA√á√ÉO:');
    buffer.writeln('');
    
    // Dados principais
    buffer.writeln('üí∞ Patrim√¥nio Atual: ${_formattingService.formatarMoeda(modelo.patrimonioAtual)}');
    buffer.writeln('üéØ Patrim√¥nio Necess√°rio: ${_formattingService.formatarMoeda(modelo.patrimonioNecessario)}');
    buffer.writeln('üí∏ Despesas Mensais: ${_formattingService.formatarMoeda(modelo.despesasMensais)}');
    buffer.writeln('üìà Aporte Mensal: ${_formattingService.formatarMoeda(modelo.aporteMensal)}');
    buffer.writeln('');
    
    // Resultado principal
    if (modelo.anosParaIndependencia == 0) {
      buffer.writeln('üéâ PARAB√âNS! Voc√™ j√° atingiu a independ√™ncia financeira!');
      buffer.writeln('üí∞ Renda Mensal Atual: ${_formattingService.formatarMoeda(modelo.rendaMensalAtual)}');
    } else {
      buffer.writeln('‚è±Ô∏è Tempo para Independ√™ncia: ${_formattingService.formatarAnos(modelo.anosParaIndependencia)}');
      buffer.writeln('üí∞ Renda Mensal Futura: ${_formattingService.formatarMoeda(modelo.despesasMensais)}');
    }
    
    buffer.writeln('');
    buffer.writeln('üì± Calculado com o app Calculei');
    buffer.writeln('üí° Planeje seu futuro financeiro!');
    
    return buffer.toString();
  }

  /// Gera texto personalizado para compartilhamento
  String gerarTextoPersonalizado(
    IndependenciaFinanceiraModel modelo, {
    bool incluirDetalhes = true,
    bool incluirDicas = true,
    String? mensagemPersonalizada,
  }) {
    final buffer = StringBuffer();
    
    // Mensagem personalizada
    if (mensagemPersonalizada != null && mensagemPersonalizada.isNotEmpty) {
      buffer.writeln(mensagemPersonalizada);
      buffer.writeln('');
    }
    
    buffer.writeln('üéØ MINHA SIMULA√á√ÉO DE INDEPEND√äNCIA FINANCEIRA');
    buffer.writeln('');
    
    // Resultado principal destacado
    if (modelo.anosParaIndependencia == 0) {
      buffer.writeln('üéâ J√Å CONQUISTEI A INDEPEND√äNCIA FINANCEIRA!');
      buffer.writeln('');
      buffer.writeln('üí∞ Posso retirar mensalmente: ${_formattingService.formatarMoeda(modelo.rendaMensalAtual)}');
    } else {
      buffer.writeln('‚è±Ô∏è Faltam ${_formattingService.formatarAnos(modelo.anosParaIndependencia)} para minha independ√™ncia!');
      buffer.writeln('');
      buffer.writeln('üéØ Meta: ${_formattingService.formatarMoeda(modelo.patrimonioNecessario)}');
    }
    
    if (incluirDetalhes) {
      buffer.writeln('');
      buffer.writeln('üìä DETALHES DA SIMULA√á√ÉO:');
      buffer.writeln('‚Ä¢ Patrim√¥nio atual: ${_formattingService.formatarMoeda(modelo.patrimonioAtual)}');
      buffer.writeln('‚Ä¢ Gastos mensais: ${_formattingService.formatarMoeda(modelo.despesasMensais)}');
      buffer.writeln('‚Ä¢ Investimento mensal: ${_formattingService.formatarMoeda(modelo.aporteMensal)}');
      buffer.writeln('‚Ä¢ Retorno esperado: ${_formattingService.formatarPercentual(modelo.retornoAnual * 100)} ao ano');
      buffer.writeln('‚Ä¢ Taxa de retirada: ${_formattingService.formatarPercentual(modelo.taxaRetirada * 100)} ao ano');
    }
    
    if (incluirDicas) {
      buffer.writeln('');
      buffer.writeln('üí° DICAS PARA ACELERAR SUA INDEPEND√äNCIA:');
      
      if (modelo.anosParaIndependencia > 20) {
        buffer.writeln('‚Ä¢ Considere aumentar seus aportes mensais');
        buffer.writeln('‚Ä¢ Revise seus gastos para reduzir despesas');
        buffer.writeln('‚Ä¢ Busque formas de aumentar sua renda');
      } else if (modelo.anosParaIndependencia > 10) {
        buffer.writeln('‚Ä¢ Voc√™ est√° no caminho certo!');
        buffer.writeln('‚Ä¢ Mantenha a disciplina nos investimentos');
        buffer.writeln('‚Ä¢ Revise periodicamente seus objetivos');
      } else {
        buffer.writeln('‚Ä¢ Excelente planejamento!');
        buffer.writeln('‚Ä¢ Continue focado em seus objetivos');
        buffer.writeln('‚Ä¢ Considere diversificar seus investimentos');
      }
    }
    
    buffer.writeln('');
    buffer.writeln('üì± Simule voc√™ tamb√©m no app Calculei');
    buffer.writeln('#IndependenciaFinanceira #InvestimentosPessoais #PlanejamentoFinanceiro');
    
    return buffer.toString();
  }

  /// Gera texto resumido para redes sociais
  String gerarTextoResumo(IndependenciaFinanceiraModel modelo) {
    final buffer = StringBuffer();
    
    if (modelo.anosParaIndependencia == 0) {
      buffer.writeln('üéâ INDEPEND√äNCIA FINANCEIRA CONQUISTADA!');
      buffer.writeln('');
      buffer.writeln('üí∞ Renda passiva mensal: ${_formattingService.formatarMoedaCompacta(modelo.rendaMensalAtual)}');
    } else {
      buffer.writeln('üéØ Minha meta de independ√™ncia financeira:');
      buffer.writeln('');
      buffer.writeln('‚è±Ô∏è ${_formattingService.formatarAnos(modelo.anosParaIndependencia)}');
      buffer.writeln('üí∞ ${_formattingService.formatarMoedaCompacta(modelo.patrimonioNecessario)}');
    }
    
    buffer.writeln('');
    buffer.writeln('üì± Calculado no app Calculei');
    buffer.writeln('#IndependenciaFinanceira #Investimentos');
    
    return buffer.toString();
  }

  /// Verifica se o compartilhamento est√° dispon√≠vel
  static Future<bool> isCompartilhamentoDisponivel() async {
    try {
      // Assume que o compartilhamento est√° sempre dispon√≠vel
      return true;
    } catch (e) {
      return false;
    }
  }
}
