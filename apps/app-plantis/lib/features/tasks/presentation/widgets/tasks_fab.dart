import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

import '../../domain/entities/task.dart';
import '../providers/tasks_provider.dart';
import 'task_creation_dialog.dart';

class TasksFab extends StatelessWidget {
  const TasksFab({super.key});

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);

    return FloatingActionButton.extended(
      onPressed: () => _showAddTaskDialog(context),
      backgroundColor: theme.colorScheme.primary,
      foregroundColor: theme.colorScheme.onPrimary,
      icon: const Icon(Icons.add),
      label: const Text('Nova Tarefa'),
      elevation: 6,
    );
  }

  Future<void> _showAddTaskDialog(BuildContext context) async {
    final result = await TaskCreationDialog.show(context: context);

    if (result != null && context.mounted) {
      // Create task entity from the form data
      final task = Task(
        id: '', // Will be generated by the repository
        createdAt: DateTime.now(),
        updatedAt: DateTime.now(),
        title: result.title,
        description: result.description,
        plantId: result.plantId,
        type: result.type,
        priority: result.priority,
        dueDate: result.dueDate,
      );

      // Add the task using the provider
      final success = await context.read<TasksProvider>().addTask(task);

      if (success && context.mounted) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text('Tarefa "${result.title}" criada com sucesso!'),
            backgroundColor: Theme.of(context).colorScheme.primary,
            behavior: SnackBarBehavior.floating,
          ),
        );
      } else if (context.mounted) {
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(
            content: Text('Erro ao criar tarefa. Tente novamente.'),
            backgroundColor: Colors.red,
            behavior: SnackBarBehavior.floating,
          ),
        );
      }
    }
  }
}
