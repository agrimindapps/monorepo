name: Automated Tests

on:
  push:
    branches: [ main, develop, 'feature/*' ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Rodar testes diariamente √†s 8h UTC
    - cron: '0 8 * * *'

jobs:
  test-matrix:
    name: Test ${{ matrix.app }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app:
          - app-plantis
          - app-gasometer
          - app-receituagro
          - app_taskolist
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        cache: true
    
    - name: Cache pub dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
          **/pubspec.lock
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pub-
    
    - name: Get dependencies for ${{ matrix.app }}
      run: |
        cd apps/${{ matrix.app }}
        flutter pub get
    
    - name: Run code generation
      run: |
        cd apps/${{ matrix.app }}
        if grep -q "build_runner" pubspec.yaml; then
          flutter pub run build_runner build --delete-conflicting-outputs
        fi
    
    - name: Run tests with coverage
      run: |
        cd apps/${{ matrix.app }}
        flutter test --coverage --reporter=expanded
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: apps/${{ matrix.app }}/coverage/lcov.info
        flags: ${{ matrix.app }}
        name: ${{ matrix.app }}-coverage
        fail_ci_if_error: false
    
    - name: Check test coverage threshold
      run: |
        cd apps/${{ matrix.app }}
        
        # Calcular coverage percentage
        if [ -f "coverage/lcov.info" ]; then
          coverage=$(lcov --summary coverage/lcov.info | grep "lines......" | awk '{print $2}' | sed 's/%//')
          echo "Coverage: $coverage%"
          
          # Threshold m√≠nimo de 70%
          threshold=70
          if (( $(echo "$coverage < $threshold" | bc -l) )); then
            echo "‚ùå Coverage $coverage% is below threshold $threshold%"
            exit 1
          else
            echo "‚úÖ Coverage $coverage% meets threshold"
          fi
        fi

  test-packages:
    name: Test Core Package
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        cache: true
    
    - name: Test core package
      run: |
        cd packages/core
        flutter pub get
        flutter test --coverage
    
    - name: Upload package coverage
      uses: codecov/codecov-action@v3
      with:
        files: packages/core/coverage/lcov.info
        flags: core-package
        name: core-package-coverage

  integration-tests:
    name: Integration Tests - ${{ matrix.app }}
    runs-on: ubuntu-latest
    # S√≥ rodar em PRs e merges para main
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    
    strategy:
      matrix:
        app: [app-plantis]  # Adicionar mais conforme necess√°rio
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        cache: true
    
    - name: Run integration tests
      run: |
        cd apps/${{ matrix.app }}
        if [ -d "integration_test" ]; then
          flutter pub get
          flutter test integration_test
        else
          echo "No integration tests found, skipping"
        fi

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [test-matrix, test-packages]
    if: always()
    
    steps:
    - name: Check test results
      run: |
        if [ "${{ needs.test-matrix.result }}" == "failure" ] || [ "${{ needs.test-packages.result }}" == "failure" ]; then
          echo "‚ùå Some tests failed"
          exit 1
        else
          echo "‚úÖ All tests passed"
        fi
    
    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const summary = `## üß™ Test Results
          
          - Test Matrix: ${{ needs.test-matrix.result }}
          - Core Package: ${{ needs.test-packages.result }}
          
          ${needsContext.test-matrix.result === 'success' ? '‚úÖ' : '‚ùå'} All app tests passed
          ${needsContext.test-packages.result === 'success' ? '‚úÖ' : '‚ùå'} Package tests passed
          
          See [workflow run](${context.payload.repository.html_url}/actions/runs/${context.runId}) for details.
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: summary
          });
