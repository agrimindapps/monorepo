// Mocks generated by Mockito 5.4.5 from annotations
// in app_petiveti/test/features/appointments/domain/usecases/add_appointment_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:app_petiveti/core/error/failures.dart' as _i5;
import 'package:app_petiveti/features/appointments/domain/entities/appointment.dart'
    as _i6;
import 'package:app_petiveti/features/appointments/domain/repositories/appointment_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AppointmentRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppointmentRepository extends _i1.Mock
    implements _i3.AppointmentRepository {
  MockAppointmentRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Appointment>>> getAppointments(
          String? animalId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAppointments,
          [animalId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.Appointment>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.Appointment>>(
          this,
          Invocation.method(
            #getAppointments,
            [animalId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Appointment>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Appointment>>>
      getUpcomingAppointments(String? animalId) => (super.noSuchMethod(
            Invocation.method(
              #getUpcomingAppointments,
              [animalId],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i6.Appointment>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.Appointment>>(
              this,
              Invocation.method(
                #getUpcomingAppointments,
                [animalId],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Appointment>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Appointment?>> getAppointmentById(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAppointmentById,
          [id],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.Appointment?>>.value(
                _FakeEither_0<_i5.Failure, _i6.Appointment?>(
          this,
          Invocation.method(
            #getAppointmentById,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Appointment?>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Appointment>> addAppointment(
          _i6.Appointment? appointment) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAppointment,
          [appointment],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Appointment>>.value(
            _FakeEither_0<_i5.Failure, _i6.Appointment>(
          this,
          Invocation.method(
            #addAppointment,
            [appointment],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Appointment>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Appointment>> updateAppointment(
          _i6.Appointment? appointment) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAppointment,
          [appointment],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Appointment>>.value(
            _FakeEither_0<_i5.Failure, _i6.Appointment>(
          this,
          Invocation.method(
            #updateAppointment,
            [appointment],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Appointment>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteAppointment(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAppointment,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteAppointment,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Appointment>>>
      getAppointmentsByDateRange(
    String? animalId,
    DateTime? startDate,
    DateTime? endDate,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAppointmentsByDateRange,
              [
                animalId,
                startDate,
                endDate,
              ],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i6.Appointment>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.Appointment>>(
              this,
              Invocation.method(
                #getAppointmentsByDateRange,
                [
                  animalId,
                  startDate,
                  endDate,
                ],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Appointment>>>);
}
