rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ===== FUNÇÕES AUXILIARES =====
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isValidTimestamp(value) {
      return value is timestamp || value is string;
    }

    // Validação de campos base de sincronização
    function hasValidSyncFields() {
      return request.resource.data.keys().hasAll(['id', 'is_dirty', 'is_deleted', 'version', 'user_id', 'module_name']);
    }

    // ===== HEALTH CHECK =====
    match /_health_check/{document} {
      allow read, write: if isAuthenticated();
    }

    // ===== USUÁRIOS (Documento Principal) =====
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) &&
        request.resource.data.keys().hasAll(['id', 'email']);

      // ===== VEÍCULOS =====
      match /vehicles/{vehicleId} {
        allow read: if isOwner(userId);
        allow create: if isOwner(userId) &&
          hasValidSyncFields() &&
          request.resource.data.user_id == userId &&
          request.resource.data.module_name == 'gasometer';
        allow update: if isOwner(userId) &&
          request.resource.data.user_id == userId;
        allow delete: if isOwner(userId);
      }

      // ===== ABASTECIMENTOS =====
      match /fuel/{recordId} {
        allow read: if isOwner(userId);
        allow create: if isOwner(userId) &&
          hasValidSyncFields() &&
          request.resource.data.user_id == userId &&
          request.resource.data.module_name == 'gasometer' &&
          request.resource.data.keys().hasAll(['vehicle_id', 'liters', 'total_price']);
        allow update: if isOwner(userId) &&
          request.resource.data.user_id == userId;
        allow delete: if isOwner(userId);
      }

      // ===== MANUTENÇÕES =====
      match /maintenance/{recordId} {
        allow read: if isOwner(userId);
        allow create: if isOwner(userId) &&
          hasValidSyncFields() &&
          request.resource.data.user_id == userId &&
          request.resource.data.module_name == 'gasometer' &&
          request.resource.data.keys().hasAll(['vehicle_id', 'type', 'cost']);
        allow update: if isOwner(userId) &&
          request.resource.data.user_id == userId;
        allow delete: if isOwner(userId);
      }

      // ===== DESPESAS =====
      match /expenses/{expenseId} {
        allow read: if isOwner(userId);
        allow create: if isOwner(userId) &&
          hasValidSyncFields() &&
          request.resource.data.user_id == userId &&
          request.resource.data.module_name == 'gasometer' &&
          request.resource.data.keys().hasAll(['vehicle_id', 'amount', 'category']);
        allow update: if isOwner(userId) &&
          request.resource.data.user_id == userId;
        allow delete: if isOwner(userId);
      }

      // ===== ASSINATURAS (Subcoleção) =====
      match /subscriptions/{subscriptionId} {
        allow read: if isOwner(userId);
        allow write: if isOwner(userId);
      }
    }

    // ===== DADOS DE SINCRONIZAÇÃO =====
    match /syncData/{userId} {
      allow read, write: if isOwner(userId);
    }

    // ===== DISPOSITIVOS =====
    match /devices/{deviceId} {
      allow read: if isAuthenticated() &&
        resource.data.user_id == request.auth.uid;
      allow create: if isAuthenticated() &&
        request.resource.data.user_id == request.auth.uid;
      allow update, delete: if isAuthenticated() &&
        resource.data.user_id == request.auth.uid;
    }

    // ===== CONFIGURAÇÕES DO USUÁRIO =====
    match /userSettings/{userId} {
      allow read, write: if isOwner(userId);
    }

    // ===== DESENVOLVIMENTO (Coleções temporárias) =====
    match /dev_vehicles/{vehicleId} {
      allow read, write: if isAuthenticated();
    }
    match /dev_fuel/{recordId} {
      allow read, write: if isAuthenticated();
    }
    match /dev_expenses/{expenseId} {
      allow read, write: if isAuthenticated();
    }
    match /dev_maintenance/{recordId} {
      allow read, write: if isAuthenticated();
    }
    match /dev_users/{userId} {
      allow read, write: if isAuthenticated();
    }
    match /dev_subscriptions/{subscriptionId} {
      allow read, write: if isAuthenticated();
    }

    // ===== BLOQUEAR TODO O RESTO =====
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
