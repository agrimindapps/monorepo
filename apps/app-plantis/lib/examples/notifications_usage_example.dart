/// Exemplo de uso do sistema de notifica√ß√µes do Plantis
///
/// Este arquivo demonstra como usar o sistema de notifica√ß√µes implementado
/// no app Plantis para diferentes cen√°rios.
library;

import 'package:flutter/foundation.dart';

import '../core/di/injection_container.dart' as di;
import '../core/services/notification_manager.dart';

class NotificationsUsageExample {
  /// Exemplo 1: Inicializar o sistema de notifica√ß√µes no app
  ///
  /// Chame este m√©todo no main() ou na inicializa√ß√£o do app
  static Future<void> initializeNotifications() async {
    // Inicializar DI primeiro
    await di.init();

    // Obter o NotificationManager
    final notificationManager = di.sl<NotificationManager>();

    // Inicializar o sistema completo de notifica√ß√µes
    final success = await notificationManager.initialize();

    if (success) {
      debugPrint('‚úÖ Sistema de notifica√ß√µes inicializado com sucesso');
    } else {
      debugPrint('‚ùå Falha na inicializa√ß√£o das notifica√ß√µes');
    }
  }

  /// Exemplo 2: Agendar notifica√ß√£o para uma nova tarefa
  ///
  /// Use quando o usu√°rio criar uma nova tarefa
  static Future<void> scheduleNewTaskNotification() async {
    final notificationManager = di.sl<NotificationManager>();

    await notificationManager.scheduleTaskReminder(
      taskId: 'task_123',
      taskName: 'Regar',
      plantName: 'Rosa do Deserto',
      taskDescription: 'Regar moderadamente, evitando encharcar',
      plantId: 'plant_456',
      dueDate: DateTime.now().add(const Duration(days: 3)),
    );

    debugPrint('üìÖ Notifica√ß√£o de tarefa agendada para 3 dias');
  }

  /// Exemplo 3: Notificar quando uma nova planta √© adicionada
  ///
  /// Use no provider/controller ap√≥s adicionar uma planta
  static Future<void> notifyNewPlantAdded() async {
    final notificationManager = di.sl<NotificationManager>();

    await notificationManager.showNewPlantNotification(
      plantName: 'Suculenta Jade',
      plantType: 'Suculenta',
    );

    debugPrint('üå± Notifica√ß√£o de nova planta enviada');
  }

  /// Exemplo 4: Verificar permiss√µes e solicitar se necess√°rio
  ///
  /// Use na tela de configura√ß√µes ou primeira execu√ß√£o
  static Future<void> checkAndRequestPermissions() async {
    final notificationManager = di.sl<NotificationManager>();

    // Verificar se j√° tem permiss√£o
    final hasPermission = await notificationManager.areNotificationsEnabled();

    if (!hasPermission) {
      debugPrint('üîî Solicitando permiss√£o para notifica√ß√µes...');

      // Solicitar permiss√£o
      final granted = await notificationManager.requestPermissions();

      if (granted) {
        debugPrint('‚úÖ Permiss√£o concedida');
      } else {
        debugPrint('‚ùå Permiss√£o negada - mostrando op√ß√£o para abrir configura√ß√µes');

        // Opcionalmente abrir configura√ß√µes do sistema
        await notificationManager.openNotificationSettings();
      }
    } else {
      debugPrint('‚úÖ Permiss√µes j√° concedidas');
    }
  }

  /// Exemplo 5: Cancelar notifica√ß√µes de uma tarefa conclu√≠da
  ///
  /// Use quando o usu√°rio marcar uma tarefa como conclu√≠da
  static Future<void> cancelTaskNotifications() async {
    final notificationManager = di.sl<NotificationManager>();

    // Cancelar notifica√ß√µes espec√≠ficas da tarefa
    await notificationManager.cancelTaskNotifications('task_123');

    debugPrint('üö´ Notifica√ß√µes da tarefa canceladas');
  }

  /// Exemplo 6: Verificar tarefas atrasadas periodicamente
  ///
  /// Use em um timer ou background task
  static Future<void> checkOverdueTasksPeriodically() async {
    final notificationManager = di.sl<NotificationManager>();

    // Verificar e notificar tarefas atrasadas
    await notificationManager.checkOverdueTasks();

    debugPrint('üîç Verifica√ß√£o de tarefas atrasadas executada');
  }

  /// Exemplo 7: Configurar lembretes di√°rios
  ///
  /// Use nas configura√ß√µes do usu√°rio
  static Future<void> setupDailyReminders() async {
    final notificationManager = di.sl<NotificationManager>();

    // Programar lembretes di√°rios de cuidados
    await notificationManager.scheduleDailyCareReminders();

    debugPrint('üìÖ Lembretes di√°rios configurados');
  }

  /// Exemplo 8: Listar notifica√ß√µes pendentes (debug/configura√ß√µes)
  ///
  /// Use para mostrar ao usu√°rio quais notifica√ß√µes est√£o agendadas
  static Future<void> listPendingNotifications() async {
    final notificationManager = di.sl<NotificationManager>();

    final pendingNotifications =
        await notificationManager.getPendingNotifications();

    debugPrint('üìã Notifica√ß√µes pendentes: ${pendingNotifications.length}');
    for (final notification in pendingNotifications) {
      debugPrint('  - ID: ${notification.id}, T√≠tulo: ${notification.title}');
    }
  }

  /// Exemplo 9: Usar no Provider/Controller de Tarefas
  ///
  /// Integra√ß√£o com a l√≥gica de neg√≥cio
  static Future<void> integrateWithTaskProvider() async {
    final notificationManager = di.sl<NotificationManager>();

    // Exemplo: Quando usu√°rio criar tarefa no provider
    // final newTask = await tasksRepository.createTask(...);

    // Agendar notifica√ß√£o para a nova tarefa
    await notificationManager.scheduleTaskReminder(
      taskId: 'newTask.id',
      taskName: 'newTask.name',
      plantName: 'newTask.plant.name',
      taskDescription: 'newTask.description',
      plantId: 'newTask.plant.id',
      dueDate: DateTime.parse('newTask.dueDate'),
    );

    debugPrint('üîó Notifica√ß√£o integrada com provider de tarefas');
  }

  /// Exemplo 10: Uso em configura√ß√µes avan√ßadas
  ///
  /// Para usu√°rios que querem controle total
  static Future<void> advancedNotificationManagement() async {
    final notificationManager = di.sl<NotificationManager>();

    // Verificar se uma notifica√ß√£o espec√≠fica existe
    final isScheduled = await notificationManager.isNotificationScheduled(
      'task_123',
    );
    debugPrint('üìã Tarefa 123 tem notifica√ß√£o agendada: $isScheduled');

    // Cancelar todas as notifica√ß√µes (reset)
    if (isScheduled) {
      await notificationManager.cancelAllNotifications();
      debugPrint('üö´ Todas as notifica√ß√µes canceladas');

      // Reconfigurar do zero
      await notificationManager.scheduleDailyCareReminders();
      debugPrint('üîÑ Sistema reconfigurado');
    }
  }
}

/// Como usar estes exemplos:
///
/// 1. No main.dart:
///    await NotificationsUsageExample.initializeNotifications();
///
/// 2. No TaskProvider quando criar tarefa:
///    await NotificationsUsageExample.scheduleNewTaskNotification();
///
/// 3. No PlantProvider quando adicionar planta:
///    await NotificationsUsageExample.notifyNewPlantAdded();
///
/// 4. Na tela de configura√ß√µes:
///    await NotificationsUsageExample.checkAndRequestPermissions();
///
/// 5. Em timer/background service:
///    Timer.periodic(Duration(hours: 6), (_) {
///      NotificationsUsageExample.checkOverdueTasksPeriodically();
///    });
